function jacob_dot = jacob_dot(rob,in2,in3)
%% JACOB_DOT - Jdot for the Puma 560 copy. 
% ========================================================================= 
%    
%    Jdot = jacob_dot(rob,q,qd) 
%    Jdot = rob.jacob_dot(q,qd) 
%    
%  Description:: 
%    Given a set of joint variables and joint velocities up to joint number the function 
%    computes the Jacobian derivatives multiplied by qd with respect to the base frame. 
%    
%  Input:: 
%    q: vector of generalized coordinates. 
%    Angles have to be given in radians!\n 
%    qd: vector of the derivatives of generalized coordinates. 
%    
%  Output:: 
%    Jdot: 6x1 vector equal to Jdot*qd. 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn, Valerio Modugno 
%    2014, Technische Universitaet Darmstadt, Germany 
%    
%  See also Puma 560 copy.
%    
    
% Copyright (C) 1993-2014, by Peter I. Corke 
% Copyright (C) 2012-2014, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 5.10.
%    10-Dec-2014 14:04:48

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
qd1 = in3(:,1);
qd2 = in3(:,2);
qd3 = in3(:,3);
qd4 = in3(:,4);
qd5 = in3(:,5);
qd6 = in3(:,6);
t2 = cos(q1);
t3 = sin(q2);
t4 = cos(q2);
t5 = cos(q3);
t6 = sin(q3);
t7 = sin(q1);
t8 = t2.*t4.*t6;
t9 = t2.*t3.*t5;
t10 = t8+t9;
t11 = qd2+qd3;
t12 = t4.*t6.*t7;
t13 = t3.*t5.*t7;
t14 = t12+t13;
t15 = t3.*t6;
t35 = t4.*t5;
t16 = t15-t35;
t17 = qd2.*4.318e-1;
t18 = qd3.*4.318e-1;
t19 = t17+t18;
t20 = qd1.*t4.*t6.*4.318e-1;
t21 = qd1.*t3.*t5.*4.318e-1;
t22 = cos(q4);
t23 = sin(q4);
t24 = t7.*t22;
t25 = t2.*t3.*t6;
t43 = t2.*t4.*t5;
t26 = t25-t43;
t44 = t23.*t26;
t27 = t24-t44;
t28 = t20+t21;
t29 = t4.*t6;
t30 = t3.*t5;
t31 = t29+t30;
t32 = qd1.*t3.*t6.*2.03e-2;
t55 = qd1.*t4.*t5.*2.03e-2;
t33 = t20+t21+t32-t55;
t34 = qd1.*t4.*t10;
t106 = qd1.*t3.*t14;
t36 = t34-t106;
t37 = t2.*t22;
t38 = t3.*t6.*t7;
t62 = t4.*t5.*t7;
t39 = t38-t62;
t40 = t23.*t39;
t41 = t37+t40;
t42 = t19.*t41;
t45 = t27.*t28;
t46 = t42+t45;
t47 = qd1.*t4.*t5;
t63 = qd1.*t3.*t6;
t48 = qd4+t47-t63;
t49 = t27.*t48.*4.318e-1;
t50 = qd1.*t4.*t6;
t51 = qd1.*t3.*t5;
t52 = t50+t51;
t53 = t23.*t28.*t31;
t112 = t23.*t31.*t52.*4.318e-1;
t54 = t49+t53-t112;
t56 = t5.*4.318e-1;
t57 = t6.*2.03e-2;
t58 = t56+t57;
t59 = t5.*2.03e-2;
t60 = t6.*4.318e-1;
t61 = t59-t60;
t64 = t6.*t19;
t65 = qd1.*t3.*1.5005e-1;
t70 = t5.*t11.*2.03e-2;
t66 = t64+t65-t70;
t67 = t5.*t19;
t68 = t6.*t11.*2.03e-2;
t71 = qd1.*t4.*1.5005e-1;
t69 = t67+t68-t71;
t72 = t3.*4.318e-1;
t73 = t4.*t58;
t74 = t3.*t61;
t75 = t72+t73+t74;
t124 = qd1.*t4.*4.318e-1;
t76 = t20+t21+t32-t55-t124;
t77 = qd2.*t3.*4.318e-1;
t78 = t4.*t69;
t97 = t3.*t66;
t79 = t77+t78-t97;
t80 = t41.*t48.*4.318e-1;
t81 = t19.*t23.*t31;
t82 = t80+t81-t11.*t23.*t31.*4.318e-1;
t83 = qd4.*t82;
t84 = t10.*t66;
t85 = t10.*t11;
t176 = qd1.*t3.*t16;
t86 = t85-t176;
t87 = t61.*t86;
t88 = t11.*t14;
t167 = qd1.*t4.*t16;
t89 = t88-t167;
t90 = t58.*t89;
t91 = t84+t87+t90-t14.*t69;
t92 = qd3.*t91;
t93 = t4.*t66;
t94 = t3.*t69;
t95 = t93+t94-qd2.*t4.*4.318e-1;
t96 = t7.*t95;
t98 = t2.*t79;
t99 = t4.*4.318e-1;
t100 = t4.*t61;
t132 = t3.*t58;
t101 = t99+t100-t132;
t102 = qd2.*t7.*t101;
t103 = t96+t98+t102-qd2.*t2.*t75;
t104 = t83+t92-qd2.*t103;
t105 = t10.*t33;
t107 = t36.*t61;
t108 = t16.*t69;
t109 = qd1.*t4.*t16.*1.5005e-1;
t128 = t11.*t14.*1.5005e-1;
t110 = t105+t107+t108+t109-t128;
t111 = qd3.*t110;
t113 = qd4.*t6.*t54;
t129 = qd4.*t5.*t46;
t114 = t111+t113-t129;
t115 = t14.*t33;
t116 = t10.*t11.*1.5005e-1;
t117 = t16.*t66;
t118 = t36.*t58;
t130 = qd1.*t3.*t16.*1.5005e-1;
t119 = t115+t116+t117+t118-t130;
t120 = qd4.*t6.*t46;
t121 = qd4.*t5.*t54;
t131 = qd3.*t119;
t122 = t120+t121-t131;
t123 = t4.*t122;
t125 = t2.*t76;
t126 = qd2.*t7.*1.5005e-1;
t127 = qd1.*t7.*t75;
t133 = sin(q5);
t134 = cos(q5);
t135 = t11.*t22;
t136 = t23.*t52;
t137 = qd5+t135+t136;
t138 = t2.*t23;
t146 = t22.*t39;
t139 = t138-t146;
t140 = t133.*t139;
t141 = t14.*t134;
t142 = t140+t141;
t143 = t16.*t134;
t144 = t22.*t31.*t133;
t145 = t143+t144;
t147 = t11.*t23;
t149 = t22.*t52;
t148 = t147-t149;
t150 = t7.*t23;
t151 = t10.*t134;
t152 = t22.*(t25-t43);
t153 = t150+t152;
t154 = t48.*t134;
t155 = t133.*t148;
t156 = qd6+t154+t155;
t160 = t133.*t153;
t157 = t151-t160;
t158 = t48.*t133;
t162 = t134.*t148;
t159 = t158-t162;
t161 = t137.*t157;
t163 = t142.*t159;
t164 = t137.*t145;
t165 = t142.*t156;
t166 = t164+t165;
t168 = t145.*t148;
t169 = t161+t168;
t170 = qd5.*t169;
t171 = t11.*t27;
t203 = t41.*t52;
t172 = t171-t203;
t173 = t161+t163;
t174 = qd6.*t134.*t173;
t204 = qd4.*t172;
t206 = qd6.*t133.*t166;
t175 = t170+t174-t204-t206;
t177 = t48.*t145;
t178 = qd6.*t134.*t166;
t179 = t41.*t48;
t202 = t11.*t23.*t31;
t180 = t179-t202;
t181 = qd4.*t180;
t182 = t142.*t148;
t183 = t145.*t159;
t190 = t156.*t157;
t184 = t183-t190;
t185 = qd6.*t184;
t186 = t48.*t157;
t187 = t182+t186;
t191 = qd5.*t187;
t188 = t185-t191;
t189 = qd6.*t133.*t173;
t194 = t137.*t142;
t192 = t177-t194;
t193 = t178+t189-qd5.*t192;
t195 = t27.*t48;
t196 = t195-t23.*t31.*t52;
t197 = qd4.*t196;
t198 = t22.*t188;
t199 = qd1.*qd2.*t7;
t200 = qd2.^2;
t201 = t2.*t200;
t205 = qd3.*t89;
t207 = t5.*t175;
t208 = qd3.*t86;
t217 = qd5.*(t177-t194);
t209 = t22.*(t178+t189-t217);
t210 = t48.*(t151-t160);
t211 = t182+t210;
t212 = qd5.*t211;
t218 = t159.*(t143+t144);
t213 = qd6.*(t190-t218);
t214 = t212+t213;
t215 = t23.*t214;
t216 = t181+t209+t215;
t219 = t207+t208-t6.*t216;
t220 = t5.*t216;
t221 = t6.*(t170+t174-t204-qd6.*t133.*(t164+t165));
t222 = t205+t220+t221;
jacob_dot = [t7.*t104+t2.*(t123-t3.*t114+qd2.*(t126+t127-t2.*t76))+qd1.*(t125+t7.*t79);-t2.*t104+t7.*(t123-t3.*t114+qd2.*(-t125+t126+t127))-qd1.*(t98-t7.*t76);t3.*t122-qd2.*(qd2.*t2.*1.5005e-1+t7.*t76+qd1.*t7.*t101)+t4.*(t111+t113-t129);-t7.*(t197+t198+t199-qd3.*t36+t23.*t193)+t2.*(t201+t3.*(t207+t208-t6.*(t181-t23.*t188+t22.*t193))+t4.*(t205+t6.*t175+t5.*(t181-t23.*t188+t22.*(t178-qd5.*t192+qd6.*t133.*(t163+t137.*(t151-t133.*(t150+t22.*t26)))))));t7.*(t201+t3.*t219+t4.*t222)+t2.*(t197+t198+t199-qd3.*t36+t23.*(t178+t189-qd5.*(t177-t194)));t7.*t200-t4.*t219+t3.*t222];
