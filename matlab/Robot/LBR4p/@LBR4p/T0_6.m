function T0_6 = T0_6(rob,in2)
%% T0_6 - Forward kinematics for the LBR4p copy arm up to frame 6 of 7. 
% ========================================================================= 
%    
%    T = T0_6(rob,q) 
%    T = rob.T0_6(q) 
%    
%  Description:: 
%    Given a set of joint variables up to joint number 6 the function 
%    computes the pose belonging to that joint with respect to the base frame. 
%    
%  Input:: 
%    q:  6-element vector of generalized coordinates. 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    T:  [4x4] Homogenous transformation matrix relating the pose of joint 6 of 7 
%              for the given joint values to the base frame. 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also LBR4p copy.
%    
    
% Copyright (C) 1993-2015, by Peter I. Corke 
% Copyright (C) 2012-2015, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 6.1.
%    04-Aug-2015 20:55:05

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
t2 = cos(q1);
t3 = cos(q4);
t4 = sin(q1);
t5 = sin(q3);
t6 = t4.*t5;
t7 = cos(q2);
t8 = cos(q3);
t13 = t2.*t7.*t8;
t9 = t6-t13;
t10 = sin(q2);
t11 = sin(q4);
t12 = sin(q5);
t14 = t3.*t9;
t15 = t2.*t10.*t11;
t16 = t14+t15;
t17 = cos(q5);
t18 = t4.*t8;
t19 = t2.*t5.*t7;
t20 = t18+t19;
t21 = cos(q6);
t22 = t9.*t11;
t23 = t22-t2.*t3.*t10;
t24 = sin(q6);
t25 = t16.*t17;
t26 = t12.*t20;
t27 = t25+t26;
t28 = t2.*t5;
t29 = t4.*t7.*t8;
t30 = t28+t29;
t31 = t3.*t30;
t38 = t4.*t10.*t11;
t32 = t31-t38;
t33 = t2.*t8;
t40 = t4.*t5.*t7;
t34 = t33-t40;
t35 = t11.*t30;
t36 = t3.*t4.*t10;
t37 = t35+t36;
t39 = t17.*t32;
t41 = t12.*t34;
t42 = t39+t41;
t43 = t7.*t11;
t44 = t3.*t8.*t10;
t45 = t43+t44;
t46 = t17.*t45;
t47 = t46-t5.*t10.*t12;
t48 = t3.*t7;
t49 = t48-t8.*t10.*t11;
T0_6 = reshape([t23.*t24-t21.*t27,-t24.*t37+t21.*t42,-t21.*t47-t24.*t49,0.0,t12.*t16-t17.*t20,-t12.*t32+t17.*t34,t12.*t45+t5.*t10.*t17,0.0,-t21.*t23-t24.*t27,t21.*t37+t24.*t42,t21.*t49-t24.*t47,0.0,t2.*t10.*(2.0./5.0)-t9.*t11.*(3.9e1./1.0e2)+t2.*t3.*t10.*(3.9e1./1.0e2),t4.*t10.*(2.0./5.0)+t11.*t30.*(3.9e1./1.0e2)+t3.*t4.*t10.*(3.9e1./1.0e2),t7.*(2.0./5.0)+t3.*t7.*(3.9e1./1.0e2)-t8.*t10.*t11.*(3.9e1./1.0e2)+3.1e1./1.0e2,1.0],[4, 4]);
