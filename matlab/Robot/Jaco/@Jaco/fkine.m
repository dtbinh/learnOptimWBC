function fkine = fkine(rob,in2)
%% FKINE - Forward kinematics solution including tool transformation for the Jaco copy arm. 
% ========================================================================= 
%    
%    T = fkine(rob,q) 
%    T = rob.fkine(q) 
%    
%  Description:: 
%    Given a full set of joint variables the function 
%    computes the pose belonging to that joint with respect to the base frame. 
%    
%  Input:: 
%    rob: robot object of Jaco copy specific class 
%    q:  6-element vector of generalized 
%         coordinates 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    T:  [4x4] Homogenous transformation matrix relating the pose of the tool 
%              for the given joint values to the base frame. 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also jacob0.
%    
    
% Copyright (C) 1993-2015, by Peter I. Corke 
% Copyright (C) 2012-2015, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 5.10.
%    12-Aug-2015 17:22:16

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
q6 = in2(:,6);
t2 = cos(q1);
t3 = cos(q4);
t4 = sin(q1);
t5 = pi.*(1.1e1./3.6e1);
t6 = cos(q2);
t7 = sin(q3);
t8 = sin(t5);
t9 = cos(q3);
t10 = sin(q2);
t11 = cos(t5);
t12 = sin(q4);
t13 = pi.*(1.0./1.8e1);
t14 = q6+t13;
t15 = sin(q5);
t16 = t2.*t3.*t6.*t9;
t17 = t2.*t3.*t7.*t10;
t26 = t4.*t12;
t18 = t16+t17-t26;
t19 = cos(q5);
t20 = t3.*t4.*t11;
t21 = t2.*t8.*t9.*t10;
t22 = t2.*t6.*t9.*t11.*t12;
t23 = t2.*t7.*t10.*t11.*t12;
t28 = t2.*t6.*t7.*t8;
t24 = t20+t21+t22+t23-t28;
t25 = cos(t14);
t27 = t18.*t19;
t29 = t27-t15.*t24;
t30 = sin(t14);
t31 = t3.*t4.*t8;
t32 = t2.*t6.*t7.*t11;
t33 = t2.*t7.*t8.*t10.*t12;
t34 = t2.*t6.*t8.*t9.*t12;
t40 = t2.*t9.*t10.*t11;
t35 = t31+t32+t33+t34-t40;
t36 = t8.*t35;
t37 = t11.*t15.*t18;
t38 = t11.*t19.*t24;
t39 = t36+t37+t38;
t41 = t11.^2;
t42 = t8.^2;
t43 = t2.*t12;
t44 = t3.*t4.*t6.*t9;
t45 = t3.*t4.*t7.*t10;
t46 = t43+t44+t45;
t47 = t4.*t8.*t9.*t10;
t48 = t4.*t7.*t10.*t11.*t12;
t49 = t4.*t6.*t9.*t11.*t12;
t57 = t2.*t3.*t11;
t58 = t4.*t6.*t7.*t8;
t50 = t47+t48+t49-t57-t58;
t51 = t4.*t6.*t7.*t11;
t52 = t4.*t7.*t8.*t10.*t12;
t53 = t4.*t6.*t8.*t9.*t12;
t62 = t2.*t3.*t8;
t63 = t4.*t9.*t10.*t11;
t54 = t51+t52+t53-t62-t63;
t55 = t8.*t54;
t56 = t11.*t15.*t46;
t59 = t11.*t19.*t50;
t60 = t55+t56+t59;
t61 = t15.*t50;
t64 = t6.*t8.*t9;
t65 = t7.*t8.*t10;
t66 = t6.*t7.*t11.*t12;
t75 = t9.*t10.*t11.*t12;
t67 = t64+t65+t66-t75;
t68 = q2-q3;
t69 = sin(t68);
t70 = t6.*t9.*t11;
t71 = t7.*t10.*t11;
t72 = t8.*t9.*t10.*t12;
t81 = t6.*t7.*t8.*t12;
t73 = t70+t71+t72-t81;
t74 = t8.*t73;
t76 = t3.*t11.*t15.*t69;
t77 = t74+t76-t11.*t19.*t67;
t78 = t15.*t67;
t79 = t3.*t19.*t69;
t80 = t78+t79;
fkine = reshape([-t29.*t30-t25.*t39,t25.*t60-t30.*(t61-t19.*t46),-t25.*t77-t30.*t80,0.0,t25.*t29-t30.*t39,t30.*t60+t25.*(t61-t19.*t46),t25.*t80-t30.*t77,0.0,t11.*t35-t8.*t15.*t18-t8.*t19.*t24,-t11.*t54+t8.*t15.*t46+t8.*t19.*t50,t11.*t73+t8.*t19.*t67-t3.*t8.*t15.*t69,0.0,t4.*(-9.8e-3)+t2.*t10.*(4.1e1./1.0e2)+t2.*t6.*t7.*2.491822393260846e-1+t3.*t4.*t8.*8.376447865216925e-2-t2.*t9.*t10.*2.491822393260846e-1+t2.*t6.*t7.*t11.*8.376447865216925e-2+t3.*t4.*t8.*t11.*2.105822393260846e-1-t2.*t9.*t10.*t11.*8.376447865216925e-2+t4.*t8.*t12.*t15.*2.105822393260846e-1+t2.*t6.*t7.*t41.*2.105822393260846e-1-t2.*t9.*t10.*t41.*2.105822393260846e-1+t2.*t6.*t8.*t9.*t12.*8.376447865216925e-2+t2.*t7.*t8.*t10.*t12.*8.376447865216925e-2-t3.*t4.*t8.*t11.*t19.*2.105822393260846e-1+t2.*t6.*t7.*t19.*t42.*2.105822393260846e-1-t2.*t9.*t10.*t19.*t42.*2.105822393260846e-1-t2.*t3.*t6.*t8.*t9.*t15.*2.105822393260846e-1-t2.*t3.*t7.*t8.*t10.*t15.*2.105822393260846e-1+t2.*t6.*t8.*t9.*t11.*t12.*2.105822393260846e-1+t2.*t7.*t8.*t10.*t11.*t12.*2.105822393260846e-1-t2.*t6.*t8.*t9.*t11.*t12.*t19.*2.105822393260846e-1-t2.*t7.*t8.*t10.*t11.*t12.*t19.*2.105822393260846e-1,t2.*(-9.8e-3)-t4.*t10.*(4.1e1./1.0e2)+t2.*t3.*t8.*8.376447865216925e-2-t4.*t6.*t7.*2.491822393260846e-1+t4.*t9.*t10.*2.491822393260846e-1+t2.*t3.*t8.*t11.*2.105822393260846e-1-t4.*t6.*t7.*t11.*8.376447865216925e-2+t4.*t9.*t10.*t11.*8.376447865216925e-2+t2.*t8.*t12.*t15.*2.105822393260846e-1-t4.*t6.*t7.*t41.*2.105822393260846e-1+t4.*t9.*t10.*t41.*2.105822393260846e-1-t4.*t6.*t8.*t9.*t12.*8.376447865216925e-2-t4.*t7.*t8.*t10.*t12.*8.376447865216925e-2-t2.*t3.*t8.*t11.*t19.*2.105822393260846e-1-t4.*t6.*t7.*t19.*t42.*2.105822393260846e-1+t4.*t9.*t10.*t19.*t42.*2.105822393260846e-1+t3.*t4.*t6.*t8.*t9.*t15.*2.105822393260846e-1+t3.*t4.*t7.*t8.*t10.*t15.*2.105822393260846e-1-t4.*t6.*t8.*t9.*t11.*t12.*2.105822393260846e-1-t4.*t7.*t8.*t10.*t11.*t12.*2.105822393260846e-1+t4.*t6.*t8.*t9.*t11.*t12.*t19.*2.105822393260846e-1+t4.*t7.*t8.*t10.*t11.*t12.*t19.*2.105822393260846e-1,t6.*(-4.1e1./1.0e2)+t6.*t9.*2.491822393260846e-1+t7.*t10.*2.491822393260846e-1+t6.*t9.*t11.*8.376447865216925e-2+t7.*t10.*t11.*8.376447865216925e-2+t6.*t9.*t41.*2.105822393260846e-1+t7.*t10.*t41.*2.105822393260846e-1-t6.*t7.*t8.*t12.*8.376447865216925e-2+t8.*t9.*t10.*t12.*8.376447865216925e-2+t6.*t9.*t19.*t42.*2.105822393260846e-1+t7.*t10.*t19.*t42.*2.105822393260846e-1+t3.*t6.*t7.*t8.*t15.*2.105822393260846e-1-t6.*t7.*t8.*t11.*t12.*2.105822393260846e-1-t3.*t8.*t9.*t10.*t15.*2.105822393260846e-1+t8.*t9.*t10.*t11.*t12.*2.105822393260846e-1+t6.*t7.*t8.*t11.*t12.*t19.*2.105822393260846e-1-t8.*t9.*t10.*t11.*t12.*t19.*2.105822393260846e-1+2.755e-1,1.0],[4, 4]);
