function T0_5 = T0_5(rob,in2)
%% T0_5 - Forward kinematics for the Puma 560 copy arm up to frame 5 of 6. 
% ========================================================================= 
%    
%    T = T0_5(rob,q) 
%    T = rob.T0_5(q) 
%    
%  Description:: 
%    Given a set of joint variables up to joint number 5 the function 
%    computes the pose belonging to that joint with respect to the base frame. 
%    
%  Input:: 
%    q:  5-element vector of generalized coordinates. 
%    Angles have to be given in radians! 
%    
%  Output:: 
%    T:  [4x4] Homogenous transformation matrix relating the pose of joint 5 of 6 
%              for the given joint values to the base frame. 
%    
%  Example:: 
%    --- 
%    
%  Known Bugs:: 
%    --- 
%    
%  TODO:: 
%    --- 
%    
%  References:: 
%    1) Robot Modeling and Control - Spong, Hutchinson, Vidyasagar 
%    2) Modelling and Control of Robot Manipulators - Sciavicco, Siciliano 
%    3) Introduction to Robotics, Mechanics and Control - Craig 
%    4) Modeling, Identification & Control of Robots - Khalil & Dombre 
%    
%  Authors:: 
%    This is an autogenerated function! 
%    Code generator written by: 
%    Joern Malzahn 
%    2012 RST, Technische Universitaet Dortmund, Germany 
%    http://www.rst.e-technik.tu-dortmund.de 
%    
%  See also Puma 560 copy.
%    
    
% Copyright (C) 1993-2014, by Peter I. Corke 
% Copyright (C) 2012-2014, by Joern Malzahn 
% 
% This file has been automatically generated with The Robotics Toolbox for Matlab (RTB). 
% 
% RTB and code generated with RTB is free software: you can redistribute it and/or modify 
% it under the terms of the GNU Lesser General Public License as published by 
% the Free Software Foundation, either version 3 of the License, or 
% (at your option) any later version. 
%  
% RTB is distributed in the hope that it will be useful, 
% but WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
% GNU Lesser General Public License for more details. 
%  
% You should have received a copy of the GNU Leser General Public License 
% along with RTB.  If not, see <http://www.gnu.org/licenses/>. 
% 
% http://www.petercorke.com 
% 
% The code generation module emerged during the work on a project funded by 
% the German Research Foundation (DFG, BE1569/7-1). The authors gratefully  
% acknowledge the financial support. 

%% Bugfix
%  In some versions the symbolic toolbox writes the constant $pi$ in
%  capital letters. This way autogenerated functions might not work properly.
%  To fix this issue a local variable is introduced:
PI = pi;
   




%    This function was generated by the Symbolic Math Toolbox version 5.10.
%    22-Nov-2014 18:13:42

q1 = in2(:,1);
q2 = in2(:,2);
q3 = in2(:,3);
q4 = in2(:,4);
q5 = in2(:,5);
t2 = cos(q1);
t3 = cos(q2);
t4 = sin(q3);
t5 = cos(q3);
t6 = sin(q2);
t7 = cos(q4);
t8 = sin(q1);
t9 = sin(q4);
t10 = t2.*t3.*t5;
t14 = t2.*t4.*t6;
t11 = t10-t14;
t12 = sin(q5);
t13 = t8.*t9;
t15 = t13-t7.*t11;
t16 = cos(q5);
t17 = t2.*t3.*t4;
t18 = t2.*t5.*t6;
t19 = t17+t18;
t20 = t3.*t5.*t8;
t23 = t4.*t6.*t8;
t21 = t20-t23;
t22 = t2.*t9;
t24 = t7.*t21;
t25 = t22+t24;
t26 = t3.*t4.*t8;
t27 = t5.*t6.*t8;
t28 = t26+t27;
t29 = t3.*t4;
t30 = t5.*t6;
t31 = t29+t30;
t32 = t3.*t5;
t33 = t32-t4.*t6;
T0_5 = reshape([-t12.*t19-t15.*t16,-t12.*t28+t16.*t25,t12.*t33+t7.*t16.*t31,0.0,-t7.*t8-t9.*t11,t2.*t7-t9.*t21,-t9.*t31,0.0,t12.*t15-t16.*t19,-t12.*t25-t16.*t28,t16.*t33-t7.*t12.*t31,0.0,t8.*1.5005e-1+t2.*t3.*4.318e-1-t2.*t3.*t4.*4.318e-1+t2.*t3.*t5.*2.03e-2-t2.*t4.*t6.*2.03e-2-t2.*t5.*t6.*4.318e-1,t2.*(-1.5005e-1)+t3.*t8.*4.318e-1-t3.*t4.*t8.*4.318e-1+t3.*t5.*t8.*2.03e-2-t4.*t6.*t8.*2.03e-2-t5.*t6.*t8.*4.318e-1,t6.*4.318e-1+t3.*t4.*2.03e-2+t3.*t5.*4.318e-1-t4.*t6.*4.318e-1+t5.*t6.*2.03e-2,1.0],[4, 4]);
