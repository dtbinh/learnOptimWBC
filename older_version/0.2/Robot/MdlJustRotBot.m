function test = MdlJustRotBot()
 clear L
   deg = pi/180;
   
  L(1) =Revolute('d',0,'a',0,'alpha',pi/2,...
       'I', [1,1,1, 0, 0, 0], ...
       'r', [0, 0, 0], ...
       'm', 0.00000001,...
       'Jm',0);
   
   L(2) = Revolute('d', 0, 'a', 1, 'alpha', 0, ...
       'I', [0.13, 0.524, 0.539, 0, 0, 0], ...
       'r', [-0.3638, 0.006, 0.2275], ...
       'm', 17.4, ...  17.4
       'Jm', 0)%, ...
%        'G', 107.815, ...
%        'B', .817e-3, ... .817e-3
%        'Tc', [0.395 -0.435]);

   L(3) = Revolute('d', 0, 'a', 1, 'alpha', 0, ...
       'I', [0.13, 0.524, 0.539, 0, 0, 0], ...
       'r', [-0.3638, 0.006, 0.2275], ...
       'm', 17.4, ...  17.4
       'Jm',0);%, ...
%        'G', 107.815, ...
%        'B', .817e-3, ... .817e-3
%        'Tc', [0.126 -0.071], ...
%        'qlim', [-45 225]*deg );
 
        
   %build the dynamical model of the robot
   test = SerialLink(L, 'name', 'MdlJustRotBot', ...
    'manufacturer', 'Unimation', 'ikine', 'puma', 'comment', 'viscous friction; params of 8/95');

  
   %
   % some useful poses
   %
   assignin('base', 'qz', [0 pi/4 0]);% zero angles, L shaped pose
   assignin('base', 'qr', [0 0 0]);% ready pose, arm up
   assignin('base', 'qs', [0 0 0]);
   assignin('base', 'qn', [0 0 0]);
   

   clear L





end